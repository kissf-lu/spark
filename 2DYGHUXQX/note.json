{
  "paragraphs": [
    {
      "text": "%md \n\n### \u003ccenter\u003eSpark ML 机器学习LAB- 森林植被预测\u003c/center\u003e\n\n---",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 09:43:13.721",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003e\u003ccenter\u003eSpark ML 机器学习LAB- 森林植被预测\u003c/center\u003e\u003c/h3\u003e\n\u003chr/\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546563386621_2030111969",
      "id": "20181229-154554_1028883481",
      "dateCreated": "2019-01-04 08:56:26.621",
      "dateStarted": "2019-01-04 09:43:07.628",
      "dateFinished": "2019-01-04 09:43:10.188",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": " 初始化环境",
      "text": "import scala.util.Random\n\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.DataFrame\n\nimport org.apache.spark.ml.{Pipeline, PipelineModel}\nimport org.apache.spark.ml.linalg.{Vector, Vectors}\nimport org.apache.spark.ml.feature.{VectorIndexer, VectorAssembler}\nimport org.apache.spark.ml.classification.{DecisionTreeClassifier, RandomForestClassifier, RandomForestClassificationModel}\n\nimport org.apache.spark.ml.tuning.{ParamGridBuilder, TrainValidationSplit}\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\n",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 09:45:40.986",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import scala.util.Random\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.DataFrame\nimport org.apache.spark.ml.{Pipeline, PipelineModel}\nimport org.apache.spark.ml.linalg.{Vector, Vectors}\nimport org.apache.spark.ml.feature.{VectorIndexer, VectorAssembler}\nimport org.apache.spark.ml.classification.{DecisionTreeClassifier, RandomForestClassifier, RandomForestClassificationModel}\nimport org.apache.spark.ml.tuning.{ParamGridBuilder, TrainValidationSplit}\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546563386625_1633044892",
      "id": "20181229-155155_182595759",
      "dateCreated": "2019-01-04 08:56:26.625",
      "dateStarted": "2019-01-04 09:45:36.208",
      "dateFinished": "2019-01-04 09:45:52.912",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "HDFS 数据文件路径配置",
      "text": "// hdfs 路径\nval dir_base \u003d \"hdfs:///user/hadoop/spark/covtype\"\nval dataWithoutHeaded \u003d spark.read.\n  option(\"inferSchema\", true).\n  option(\"header\", false).\n  csv(s\"${dir_base}/covtype.data\")\n  \n  \n\n\n",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 09:45:50.281",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "dir_base: String \u003d hdfs:///user/hadoop/spark/covtype\ndataWithoutHeaded: org.apache.spark.sql.DataFrame \u003d [_c0: int, _c1: int ... 53 more fields]\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://master:4040/jobs/job?id\u003d0",
            "http://master:4040/jobs/job?id\u003d1"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1546563386626_944350714",
      "id": "20181229-155318_361099773",
      "dateCreated": "2019-01-04 08:56:26.626",
      "dateStarted": "2019-01-04 09:45:50.331",
      "dateFinished": "2019-01-04 09:46:08.916",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "数据集的表头名制作",
      "text": "val colNames \u003d Seq(\n    \"Elevation\", \"Aspect\", \"Slope\",\n    \"Horizontal_Distance_To_Hydrology\", \"Vertical_Distance_To_Hydrology\",\n    \"Horizontal_Distance_To_Roadways\",\n    \"Hillshade_9am\", \"Hillshade_Noon\", \"Hillshade_3pm\", \"Horizontal_Distance_To_Fire_Points\"\n) ++ ((0 until 4).map(i \u003d\u003e s\"Wilderness_Area_$i\")\n) ++ ((0 until 40).map(i \u003d\u003e s\"Soil_Type_$i\")\n) ++ Seq(\"Cover_Type\")\nval data \u003d dataWithoutHeaded.\n  toDF(colNames:_*).\n  withColumn(\"Cover_Type\", $\"Cover_Type\".cast(\"double\"))\n  ",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 09:45:55.693",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "colNames: Seq[String] \u003d List(Elevation, Aspect, Slope, Horizontal_Distance_To_Hydrology, Vertical_Distance_To_Hydrology, Horizontal_Distance_To_Roadways, Hillshade_9am, Hillshade_Noon, Hillshade_3pm, Horizontal_Distance_To_Fire_Points, Wilderness_Area_0, Wilderness_Area_1, Wilderness_Area_2, Wilderness_Area_3, Soil_Type_0, Soil_Type_1, Soil_Type_2, Soil_Type_3, Soil_Type_4, Soil_Type_5, Soil_Type_6, Soil_Type_7, Soil_Type_8, Soil_Type_9, Soil_Type_10, Soil_Type_11, Soil_Type_12, Soil_Type_13, Soil_Type_14, Soil_Type_15, Soil_Type_16, Soil_Type_17, Soil_Type_18, Soil_Type_19, Soil_Type_20, Soil_Type_21, Soil_Type_22, Soil_Type_23, Soil_Type_24, Soil_Type_25, Soil_Type_26, Soil_Type_27, Soil_Type_28, Soil_Type_29, Soil_Type_30, Soil_Type_31, Soil_Type_32, Soil_Type_33, Soil_Type_34, Soil_...data: org.apache.spark.sql.DataFrame \u003d [Elevation: int, Aspect: int ... 53 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546563386627_-1188784158",
      "id": "20190101-155633_944444497",
      "dateCreated": "2019-01-04 08:56:26.627",
      "dateStarted": "2019-01-04 09:45:55.722",
      "dateFinished": "2019-01-04 09:46:10.497",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "函数定义",
      "text": "// --------------------------- 数据的转换函数 ------------------------\n\n/*\n数据的多列转换为非热键的单列数据类型：\na: Wilderness_Area 野地类型\nb: Soil_Type 土壤类型\n**/ \n\ndef unencodeOneHot(data: DataFrame): DataFrame \u003d {\n    // 二进制向量转换为 OneHot编码： 1.0的索引值为单点数据： (0, 0, 1, 0, 0) -\u003e 2.0\n    val unhotUDF \u003d udf((vec: Vector) \u003d\u003e vec.toArray.indexOf(1.0).toDouble)\n    // \n    val wildernessCols \u003d (0 until 4).map(i \u003d\u003e s\"Wilderness_Area_$i\").toArray\n    \n    // 获取野地类型\n    val wildernessAssembler \u003d new VectorAssembler().\n      setInputCols(wildernessCols).\n      setOutputCol(\"wilderness\")\n    // 获取二进制向量的， 丢弃wilderness的\n    val withWilderness \u003d wildernessAssembler.transform(data).\n      drop(wildernessCols:_*).\n      withColumn(\"wilderness\", unhotUDF($\"wilderness\"))\n    \n    // 转换二进制土壤类型指标为单值指标\n    val soilCols \u003d (0 until 40).map(i \u003d\u003e s\"Soil_Type_$i\").toArray\n    val soilAssembler \u003d new VectorAssembler().\n      setInputCols(soilCols).\n      setOutputCol(\"soil\")\n    soilAssembler.transform(withWilderness).\n      drop(soilCols:_*).\n      withColumn(\"soil\", unhotUDF($\"soil\"))  // 获取(0, ..., 1.0, 0, ..) -\u003e i i为1.0的索引值\n    \n}\n\n// -------------------------- 评估函数---------------------------------\n\n/*宽表转换为长表\nds: 需要转换的DF数据\n\ncol: 转换的列列表\n**/\ndef getTDataset(ds: DataFrame, col: Array[String]): DataFrame \u003d {\n    val dsSch \u003d ds.schema\n    ds.flatMap(r \u003d\u003e {\n      (0 until r.size).map(i \u003d\u003e {\n        (dsSch(i).name, r.getLong(i))\n      })\n    }).toDF(col:_*)\n}\n\n/*提取agg聚合函数的col名，将聚合的表头替换为原始的列表表头\n\n如： sum(col1) -\u003e col1, max(col2) -\u003e col2\n\n**/\ndef aggCol2Col(col: String) \u003d {\n    val reg \u003d raw\"(\\D+)\\((\\w+)\\)\".r\n    col match {\n        case reg(_, k, _*) \u003d\u003e k\n    }\n}\n\n\n/*获取预测数据的预测只与正确值同统计矩阵\n\nlabelRange： 测试标签的取值范围列表，用于pivot函数的lable输入参数\n**/\ndef getPredictionCount(data: DataFrame, label: String, labelRange: Array[Int]): DataFrame \u003d {\n    data.groupBy(label).\n      pivot(\"prediction\", labelRange).\n      count.na.fill(0.0).orderBy(label)\n}\n\n/*获取DF数值列的纵向和统计结果\nfunStr: 统计表表头的转换函数： 比如aggCol2Col函数，提取原始表名\n**/\ndef getAggRowDF(data: DataFrame, funStr: String\u003d\"sum\") \u003d {\n  // 数字特征的预测结果列\n  val colName \u003d data.columns.tail\n  // sum 聚合\n  val sumCols \u003d data.agg(colName.map(i \u003d\u003e s\"$i\" -\u003e funStr).toMap)\n  // 表头替换 添加sum行表头\n  sumCols.\n    toDF(sumCols.columns.map(aggCol2Col):_*)\n}\n\n\n\n\n",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 09:46:38.742",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "unencodeOneHot: (data: org.apache.spark.sql.DataFrame)org.apache.spark.sql.DataFrame\ngetTDataset: (ds: org.apache.spark.sql.DataFrame, col: Array[String])org.apache.spark.sql.DataFrame\naggCol2Col: (col: String)String\ngetPredictionCount: (data: org.apache.spark.sql.DataFrame, label: String, labelRange: Array[Int])org.apache.spark.sql.DataFrame\ngetAggRowDF: (data: org.apache.spark.sql.DataFrame, funStr: String)org.apache.spark.sql.DataFrame\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546563386627_512073214",
      "id": "20190101-154915_2061646246",
      "dateCreated": "2019-01-04 08:56:26.627",
      "dateStarted": "2019-01-04 09:46:38.766",
      "dateFinished": "2019-01-04 09:46:41.952",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "数据集划分: 9 ： 1 划分训练数据与测试数据",
      "text": "// traindata and testdata split\n\nval Array(trainData, testData) \u003d data.randomSplit(Array(0.9, 0.1))\n\n// cache data\ntrainData.cache\ntestData.cache\n",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 09:47:04.189",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "trainData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Elevation: int, Aspect: int ... 53 more fields]\ntestData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Elevation: int, Aspect: int ... 53 more fields]\nres20: trainData.type \u003d [Elevation: int, Aspect: int ... 53 more fields]\nres21: testData.type \u003d [Elevation: int, Aspect: int ... 53 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546563386628_1960282659",
      "id": "20190101-155007_993786457",
      "dateCreated": "2019-01-04 08:56:26.628",
      "dateStarted": "2019-01-04 09:47:04.212",
      "dateFinished": "2019-01-04 09:47:05.873",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "训练数据 和 测试数据的数据转换",
      "text": "// 编码转换\nval unencTrainData \u003d unencodeOneHot(trainData)\nval unencTestData \u003d unencodeOneHot(testData)\n",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 09:47:08.841",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "unencTrainData: org.apache.spark.sql.DataFrame \u003d [Elevation: int, Aspect: int ... 11 more fields]\nunencTestData: org.apache.spark.sql.DataFrame \u003d [Elevation: int, Aspect: int ... 11 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546563386628_-1182313286",
      "id": "20181229-155244_1250204333",
      "dateCreated": "2019-01-04 08:56:26.628",
      "dateStarted": "2019-01-04 09:47:08.867",
      "dateFinished": "2019-01-04 09:47:09.708",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "pipeline 管道转换配置",
      "text": "// 特征向量转换器\nval assembler \u003d new VectorAssembler().\n  setInputCols(unencTrainData.columns.filter(_ !\u003d \"Cover_Type\")).\n  setOutputCol(\"featureVector\")\n// 特质分类转换器\nval indexer \u003d new VectorIndexer().\n  setMaxCategories(40).\n  setInputCol(\"featureVector\").\n  setOutputCol(\"indexedVector\")\n// 随机数分类器\nval classifier \u003d new RandomForestClassifier().\n  setSeed(Random.nextLong).\n  setLabelCol(\"Cover_Type\").\n  setFeaturesCol(\"indexedVector\").\n  setPredictionCol(\"prediction\").\n  setImpurity(\"entropy\").\n  setMaxDepth(20).\n  setMaxBins(220)\n\n\nval pipeline \u003d new Pipeline().setStages(Array(assembler, indexer, classifier))\n",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 09:47:12.918",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "assembler: org.apache.spark.ml.feature.VectorAssembler \u003d vecAssembler_7e0ff9a30e80\nindexer: org.apache.spark.ml.feature.VectorIndexer \u003d vecIdx_a58ef868bfe2\nclassifier: org.apache.spark.ml.classification.RandomForestClassifier \u003d rfc_ed9332e43726\npipeline: org.apache.spark.ml.Pipeline \u003d pipeline_b13c842ac794\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546563386629_1847011714",
      "id": "20190101-110359_531644912",
      "dateCreated": "2019-01-04 08:56:26.629",
      "dateStarted": "2019-01-04 09:47:12.946",
      "dateFinished": "2019-01-04 09:47:14.145",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "训练数据的多参数拟合",
      "text": "val paramGrid \u003d new ParamGridBuilder().\n  addGrid(classifier.minInfoGain, Seq(0.0, 0.05)).\n  addGrid(classifier.numTrees, Seq(1, 10)).\n  build()\n\nval multiclassEval \u003d new MulticlassClassificationEvaluator().\n  setLabelCol(\"Cover_Type\").\n  setPredictionCol(\"prediction\").\n  setMetricName(\"accuracy\")\n\nval validator \u003d new TrainValidationSplit().\n  setSeed(Random.nextLong).\n  setEstimator(pipeline).\n  setEvaluator(multiclassEval).\n  setEstimatorParamMaps(paramGrid).\n  setTrainRatio(0.9)\n\nval validatorModel \u003d validator.fit(unencTrainData)\n\n",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 09:47:32.012",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "paramGrid: Array[org.apache.spark.ml.param.ParamMap] \u003d\nArray({\n\trfc_ed9332e43726-minInfoGain: 0.0,\n\trfc_ed9332e43726-numTrees: 1\n}, {\n\trfc_ed9332e43726-minInfoGain: 0.05,\n\trfc_ed9332e43726-numTrees: 1\n}, {\n\trfc_ed9332e43726-minInfoGain: 0.0,\n\trfc_ed9332e43726-numTrees: 10\n}, {\n\trfc_ed9332e43726-minInfoGain: 0.05,\n\trfc_ed9332e43726-numTrees: 10\n})\nmulticlassEval: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator \u003d mcEval_75ff1e402ed0\nvalidator: org.apache.spark.ml.tuning.TrainValidationSplit \u003d tvs_f64fcbf0f666\nvalidatorModel: org.apache.spark.ml.tuning.TrainValidationSplitModel \u003d tvs_f64fcbf0f666\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://master:4040/jobs/job?id\u003d2",
            "http://master:4040/jobs/job?id\u003d3",
            "http://master:4040/jobs/job?id\u003d4",
            "http://master:4040/jobs/job?id\u003d5",
            "http://master:4040/jobs/job?id\u003d6",
            "http://master:4040/jobs/job?id\u003d7",
            "http://master:4040/jobs/job?id\u003d8",
            "http://master:4040/jobs/job?id\u003d9",
            "http://master:4040/jobs/job?id\u003d10",
            "http://master:4040/jobs/job?id\u003d11",
            "http://master:4040/jobs/job?id\u003d12",
            "http://master:4040/jobs/job?id\u003d13",
            "http://master:4040/jobs/job?id\u003d14",
            "http://master:4040/jobs/job?id\u003d15",
            "http://master:4040/jobs/job?id\u003d16",
            "http://master:4040/jobs/job?id\u003d17",
            "http://master:4040/jobs/job?id\u003d18",
            "http://master:4040/jobs/job?id\u003d19",
            "http://master:4040/jobs/job?id\u003d20",
            "http://master:4040/jobs/job?id\u003d21",
            "http://master:4040/jobs/job?id\u003d22",
            "http://master:4040/jobs/job?id\u003d23",
            "http://master:4040/jobs/job?id\u003d24",
            "http://master:4040/jobs/job?id\u003d25",
            "http://master:4040/jobs/job?id\u003d26",
            "http://master:4040/jobs/job?id\u003d27",
            "http://master:4040/jobs/job?id\u003d28",
            "http://master:4040/jobs/job?id\u003d29",
            "http://master:4040/jobs/job?id\u003d30",
            "http://master:4040/jobs/job?id\u003d31",
            "http://master:4040/jobs/job?id\u003d32",
            "http://master:4040/jobs/job?id\u003d33",
            "http://master:4040/jobs/job?id\u003d34",
            "http://master:4040/jobs/job?id\u003d35",
            "http://master:4040/jobs/job?id\u003d36",
            "http://master:4040/jobs/job?id\u003d37",
            "http://master:4040/jobs/job?id\u003d38",
            "http://master:4040/jobs/job?id\u003d39",
            "http://master:4040/jobs/job?id\u003d40",
            "http://master:4040/jobs/job?id\u003d41",
            "http://master:4040/jobs/job?id\u003d42",
            "http://master:4040/jobs/job?id\u003d43",
            "http://master:4040/jobs/job?id\u003d44",
            "http://master:4040/jobs/job?id\u003d45",
            "http://master:4040/jobs/job?id\u003d46",
            "http://master:4040/jobs/job?id\u003d47",
            "http://master:4040/jobs/job?id\u003d48",
            "http://master:4040/jobs/job?id\u003d49",
            "http://master:4040/jobs/job?id\u003d50",
            "http://master:4040/jobs/job?id\u003d51",
            "http://master:4040/jobs/job?id\u003d52",
            "http://master:4040/jobs/job?id\u003d53",
            "http://master:4040/jobs/job?id\u003d54",
            "http://master:4040/jobs/job?id\u003d55",
            "http://master:4040/jobs/job?id\u003d56",
            "http://master:4040/jobs/job?id\u003d57",
            "http://master:4040/jobs/job?id\u003d58",
            "http://master:4040/jobs/job?id\u003d59",
            "http://master:4040/jobs/job?id\u003d60",
            "http://master:4040/jobs/job?id\u003d61",
            "http://master:4040/jobs/job?id\u003d62",
            "http://master:4040/jobs/job?id\u003d63",
            "http://master:4040/jobs/job?id\u003d64",
            "http://master:4040/jobs/job?id\u003d65",
            "http://master:4040/jobs/job?id\u003d66",
            "http://master:4040/jobs/job?id\u003d67",
            "http://master:4040/jobs/job?id\u003d68",
            "http://master:4040/jobs/job?id\u003d69",
            "http://master:4040/jobs/job?id\u003d70",
            "http://master:4040/jobs/job?id\u003d71",
            "http://master:4040/jobs/job?id\u003d72",
            "http://master:4040/jobs/job?id\u003d73",
            "http://master:4040/jobs/job?id\u003d74",
            "http://master:4040/jobs/job?id\u003d75",
            "http://master:4040/jobs/job?id\u003d76",
            "http://master:4040/jobs/job?id\u003d77",
            "http://master:4040/jobs/job?id\u003d78",
            "http://master:4040/jobs/job?id\u003d79",
            "http://master:4040/jobs/job?id\u003d80",
            "http://master:4040/jobs/job?id\u003d81",
            "http://master:4040/jobs/job?id\u003d82",
            "http://master:4040/jobs/job?id\u003d83",
            "http://master:4040/jobs/job?id\u003d84",
            "http://master:4040/jobs/job?id\u003d85",
            "http://master:4040/jobs/job?id\u003d86",
            "http://master:4040/jobs/job?id\u003d87",
            "http://master:4040/jobs/job?id\u003d88",
            "http://master:4040/jobs/job?id\u003d89",
            "http://master:4040/jobs/job?id\u003d90",
            "http://master:4040/jobs/job?id\u003d91",
            "http://master:4040/jobs/job?id\u003d92",
            "http://master:4040/jobs/job?id\u003d93",
            "http://master:4040/jobs/job?id\u003d94",
            "http://master:4040/jobs/job?id\u003d95",
            "http://master:4040/jobs/job?id\u003d96",
            "http://master:4040/jobs/job?id\u003d97",
            "http://master:4040/jobs/job?id\u003d98",
            "http://master:4040/jobs/job?id\u003d99",
            "http://master:4040/jobs/job?id\u003d100",
            "http://master:4040/jobs/job?id\u003d101",
            "http://master:4040/jobs/job?id\u003d102",
            "http://master:4040/jobs/job?id\u003d103",
            "http://master:4040/jobs/job?id\u003d104",
            "http://master:4040/jobs/job?id\u003d105",
            "http://master:4040/jobs/job?id\u003d106",
            "http://master:4040/jobs/job?id\u003d107",
            "http://master:4040/jobs/job?id\u003d108",
            "http://master:4040/jobs/job?id\u003d109",
            "http://master:4040/jobs/job?id\u003d110",
            "http://master:4040/jobs/job?id\u003d111",
            "http://master:4040/jobs/job?id\u003d112",
            "http://master:4040/jobs/job?id\u003d113",
            "http://master:4040/jobs/job?id\u003d114",
            "http://master:4040/jobs/job?id\u003d115",
            "http://master:4040/jobs/job?id\u003d116",
            "http://master:4040/jobs/job?id\u003d117",
            "http://master:4040/jobs/job?id\u003d118",
            "http://master:4040/jobs/job?id\u003d119",
            "http://master:4040/jobs/job?id\u003d120",
            "http://master:4040/jobs/job?id\u003d121",
            "http://master:4040/jobs/job?id\u003d122",
            "http://master:4040/jobs/job?id\u003d123",
            "http://master:4040/jobs/job?id\u003d124",
            "http://master:4040/jobs/job?id\u003d125",
            "http://master:4040/jobs/job?id\u003d126",
            "http://master:4040/jobs/job?id\u003d127",
            "http://master:4040/jobs/job?id\u003d128",
            "http://master:4040/jobs/job?id\u003d129",
            "http://master:4040/jobs/job?id\u003d130",
            "http://master:4040/jobs/job?id\u003d131",
            "http://master:4040/jobs/job?id\u003d132",
            "http://master:4040/jobs/job?id\u003d133",
            "http://master:4040/jobs/job?id\u003d134",
            "http://master:4040/jobs/job?id\u003d135",
            "http://master:4040/jobs/job?id\u003d136",
            "http://master:4040/jobs/job?id\u003d137",
            "http://master:4040/jobs/job?id\u003d138",
            "http://master:4040/jobs/job?id\u003d139",
            "http://master:4040/jobs/job?id\u003d140",
            "http://master:4040/jobs/job?id\u003d141",
            "http://master:4040/jobs/job?id\u003d142",
            "http://master:4040/jobs/job?id\u003d143",
            "http://master:4040/jobs/job?id\u003d144",
            "http://master:4040/jobs/job?id\u003d145",
            "http://master:4040/jobs/job?id\u003d146",
            "http://master:4040/jobs/job?id\u003d147",
            "http://master:4040/jobs/job?id\u003d148",
            "http://master:4040/jobs/job?id\u003d149",
            "http://master:4040/jobs/job?id\u003d150",
            "http://master:4040/jobs/job?id\u003d151",
            "http://master:4040/jobs/job?id\u003d152",
            "http://master:4040/jobs/job?id\u003d153",
            "http://master:4040/jobs/job?id\u003d154",
            "http://master:4040/jobs/job?id\u003d155",
            "http://master:4040/jobs/job?id\u003d156",
            "http://master:4040/jobs/job?id\u003d157",
            "http://master:4040/jobs/job?id\u003d158",
            "http://master:4040/jobs/job?id\u003d159",
            "http://master:4040/jobs/job?id\u003d160",
            "http://master:4040/jobs/job?id\u003d161",
            "http://master:4040/jobs/job?id\u003d162",
            "http://master:4040/jobs/job?id\u003d163",
            "http://master:4040/jobs/job?id\u003d164",
            "http://master:4040/jobs/job?id\u003d165",
            "http://master:4040/jobs/job?id\u003d166",
            "http://master:4040/jobs/job?id\u003d167",
            "http://master:4040/jobs/job?id\u003d168",
            "http://master:4040/jobs/job?id\u003d169",
            "http://master:4040/jobs/job?id\u003d170",
            "http://master:4040/jobs/job?id\u003d171",
            "http://master:4040/jobs/job?id\u003d172",
            "http://master:4040/jobs/job?id\u003d173",
            "http://master:4040/jobs/job?id\u003d174",
            "http://master:4040/jobs/job?id\u003d175",
            "http://master:4040/jobs/job?id\u003d176",
            "http://master:4040/jobs/job?id\u003d177",
            "http://master:4040/jobs/job?id\u003d178",
            "http://master:4040/jobs/job?id\u003d179",
            "http://master:4040/jobs/job?id\u003d180",
            "http://master:4040/jobs/job?id\u003d181",
            "http://master:4040/jobs/job?id\u003d182",
            "http://master:4040/jobs/job?id\u003d183",
            "http://master:4040/jobs/job?id\u003d184",
            "http://master:4040/jobs/job?id\u003d185",
            "http://master:4040/jobs/job?id\u003d186"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1546563386629_1353642972",
      "id": "20190101-160631_1443147183",
      "dateCreated": "2019-01-04 08:56:26.629",
      "dateStarted": "2019-01-04 09:47:32.045",
      "dateFinished": "2019-01-04 09:54:18.291",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "从多组训练模型中获取最佳训练模型",
      "text": "val bestModel \u003d validatorModel.bestModel\n// \nval forestModel \u003d bestModel.asInstanceOf[PipelineModel].stages.last.asInstanceOf[RandomForestClassificationModel]\n// 模型参数\nforestModel.featureImportances.toArray.\n  zip(unencTrainData.columns.filter(_ !\u003d \"Cover_Type\")).\n  sorted.reverse.foreach(println)\n  ",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 09:57:12.814",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "bestModel: org.apache.spark.ml.Model[_] \u003d pipeline_b13c842ac794\nforestModel: org.apache.spark.ml.classification.RandomForestClassificationModel \u003d RandomForestClassificationModel (uid\u003drfc_ed9332e43726) with 10 trees\n(0.3273348314899433,Elevation)\n(0.15856891738756348,soil)\n(0.11891287306378424,Horizontal_Distance_To_Roadways)\n(0.10490492804121232,Horizontal_Distance_To_Fire_Points)\n(0.06477154744141567,wilderness)\n(0.048883793495656615,Horizontal_Distance_To_Hydrology)\n(0.043365363484731294,Vertical_Distance_To_Hydrology)\n(0.03234686649186845,Aspect)\n(0.029681275970792877,Hillshade_Noon)\n(0.028693333892371976,Hillshade_9am)\n(0.024866224253559704,Hillshade_3pm)\n(0.017670044987100165,Slope)\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546563386630_-1366017958",
      "id": "20190101-160853_1978815652",
      "dateCreated": "2019-01-04 08:56:26.630",
      "dateStarted": "2019-01-04 09:57:12.846",
      "dateFinished": "2019-01-04 09:57:13.986",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n##  \u003ccenter\u003e模型的测试集合验证 与 模型评估\u003c/center\u003e\n---",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 09:57:19.582",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003e\u003ccenter\u003e模型的测试集合验证 与 模型评估\u003c/center\u003e\u003c/h2\u003e\n\u003chr/\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546563386630_23122976",
      "id": "20190101-164757_1725714885",
      "dateCreated": "2019-01-04 08:56:26.630",
      "dateStarted": "2019-01-04 09:57:19.582",
      "dateFinished": "2019-01-04 09:57:19.588",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "测试集验证模型",
      "text": "val bstPrediction \u003d bestModel.transform(unencTestData)\n",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 09:57:23.862",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true,
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "bstPrediction: org.apache.spark.sql.DataFrame \u003d [Elevation: int, Aspect: int ... 16 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546563386631_629757316",
      "id": "20190101-164717_1695296736",
      "dateCreated": "2019-01-04 08:56:26.631",
      "dateStarted": "2019-01-04 09:57:23.891",
      "dateFinished": "2019-01-04 09:57:24.234",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "获取测试数据集的测试结果统计",
      "text": "// 统计矩阵： 对角线为正确预测数， 非对角线为错误\nval contDF \u003d getPredictionCount(data\u003dbstPrediction, label\u003d\"Cover_Type\", labelRange\u003d(1 to 7).toArray)\n// 获取矩阵的对角线值，将结果列cross_val左联接至原始表\n\n\n// 获取对角线的数值\n// 获取统计表的正确统计值DF\nval crossValDF \u003d contDF.map(r \u003d\u003e {\n    val idx \u003d r.getDouble(0).toInt\n    (idx, r.getLong(idx))\n}).toDF(\"Type\", \"cross_val\")\n\n// -----------------------------获取矩阵的对角线值，将结果列cross_val左联接至原始表---------\nval validateModelDF \u003d contDF.\n  join(crossValDF, contDF.col(\"Cover_Type\").equalTo(crossValDF.col(\"Type\")), \"left\").\n  drop(\"Type\")\n  \n\n// ----------------------------增加纵向求和行数据------------------------------------------\nval sumTypeDF \u003d getAggRowDF(data\u003dvalidateModelDF)\n// \nval sumRowTypeDF \u003d sumTypeDF.withColumn(\"Cover_Type\", lit(\"sum_val\"))\n// // // 根据columns 名称 做 表格的行数据增加\nval sumAllTypeOfCovert \u003d validateModelDF.unionByName(sumRowTypeDF)\n\n// ---------------------------缓存中间表---------------------\n\nsumAllTypeOfCovert.cache\n\n\n// ----------------------------统计表生成---------------------\n// val contData \u003d sumAllTypeOfCovert.show\n\nval staticPercentData \u003d sumAllTypeOfCovert.\n  withColumn(\"sum_val\", $\"1\" + $\"2\" + $\"3\" + $\"4\" + $\"5\" + $\"6\" + $\"7\").\n  withColumn(\"rat\", $\"cross_val\" / $\"sum_val\")\n  \n// ------------------------ sql 注册 -------------------------\n\nstaticPercentData.registerTempTable(\"staticPercentTable\")\n\n",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 16:55:20.211",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "contDF: org.apache.spark.sql.DataFrame \u003d [Cover_Type: double, 1: bigint ... 6 more fields]\ncrossValDF: org.apache.spark.sql.DataFrame \u003d [Type: int, cross_val: bigint]\nvalidateModelDF: org.apache.spark.sql.DataFrame \u003d [Cover_Type: double, 1: bigint ... 7 more fields]\nsumTypeDF: org.apache.spark.sql.DataFrame \u003d [4: bigint, 5: bigint ... 6 more fields]\nsumRowTypeDF: org.apache.spark.sql.DataFrame \u003d [4: bigint, 5: bigint ... 7 more fields]\nsumAllTypeOfCovert: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Cover_Type: string, 1: bigint ... 7 more fields]\nres44: sumAllTypeOfCovert.type \u003d [Cover_Type: string, 1: bigint ... 7 more fields]\nstaticPercentData: org.apache.spark.sql.DataFrame \u003d [Cover_Type: string, 1: bigint ... 9 more fields]\nwarning: there was one deprecation warning; re-run with -deprecation for details\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://master:4040/jobs/job?id\u003d187",
            "http://master:4040/jobs/job?id\u003d188"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1546563386631_-140477722",
      "id": "20190101-165215_157768855",
      "dateCreated": "2019-01-04 08:56:26.631",
      "dateStarted": "2019-01-04 09:57:27.680",
      "dateFinished": "2019-01-04 09:59:45.915",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n- 增加每个特征的预测结果统计\n   - cross_val: 正确预测值\n   - sum: 预测结果总计\n   - rat: 预测的正确率： cross_val / sum\n",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 09:43:56.046",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e增加每个特征的预测结果统计\u003c/li\u003e\n  \u003cli\u003ecross_val: 正确预测值\u003c/li\u003e\n  \u003cli\u003esum: 预测结果总计\u003c/li\u003e\n  \u003cli\u003erat: 预测的正确率： cross_val / sum\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546563386632_1879423884",
      "id": "20190101-165250_1347405289",
      "dateCreated": "2019-01-04 08:56:26.632",
      "dateStarted": "2019-01-04 09:43:56.046",
      "dateFinished": "2019-01-04 09:43:56.069",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "统计表格",
      "text": "%sql\nselect\n*\nfrom staticPercentTable\n",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 10:48:44.322",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "1": "string",
                      "2": "string",
                      "3": "string",
                      "4": "string",
                      "5": "string",
                      "6": "string",
                      "7": "string",
                      "Cover_Type": "string",
                      "cross_val": "string",
                      "sum_val": "string",
                      "rat": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Cover_Type\t1\t2\t3\t4\t5\t6\t7\tcross_val\tsum_val\trat\n1.0\t19829\t1348\t0\t0\t4\t1\t43\t19829\t21225\t0.934228504122497\n2.0\t679\t27531\t51\t0\t42\t30\t6\t27531\t28339\t0.9714880553301104\n3.0\t0\t62\t3397\t13\t7\t76\t0\t3397\t3555\t0.9555555555555556\n4.0\t0\t0\t26\t220\t0\t7\t0\t220\t253\t0.8695652173913043\n5.0\t17\t184\t11\t0\t800\t1\t0\t800\t1013\t0.7897334649555775\n6.0\t5\t58\t99\t16\t3\t1553\t0\t1553\t1734\t0.8956170703575548\n7.0\t96\t13\t0\t0\t0\t0\t1986\t1986\t2095\t0.9479713603818616\nsum_val\t20626\t29196\t3584\t249\t856\t1668\t2035\t55316\t58214\t0.9502181605799292\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://master:4040/jobs/job?id\u003d189",
            "http://master:4040/jobs/job?id\u003d190",
            "http://master:4040/jobs/job?id\u003d191"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1546563386633_-1393803092",
      "id": "20190101-174337_1620177813",
      "dateCreated": "2019-01-04 08:56:26.633",
      "dateStarted": "2019-01-04 10:48:44.349",
      "dateFinished": "2019-01-04 10:48:57.068",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "测试集：分类样本数(sum) VS 预测正确样本数(cross_val)",
      "text": "%sql\nselect\n`Cover_Type`, `cross_val`, `sum_val`\nfrom staticPercentTable\nwhere Cover_Type !\u003d \u0027sum_val\u0027\n",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 16:57:21.700",
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 4.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "multiBarChart",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "Cover_Type",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "1",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "2",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "3",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "4",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "5",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "6",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "7",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "cross_val",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1.0,
                      "paginationPageSize": 250.0
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "Cover_Type": "string",
                      "cross_val": "string",
                      "sum_val": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default",
                  "stacked": false
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "Cover_Type",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "cross_val",
                  "index": 1.0,
                  "aggr": "sum"
                },
                {
                  "name": "sum_val",
                  "index": 2.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "enabled": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Cover_Type\tcross_val\tsum_val\n1.0\t19829\t21225\n2.0\t27531\t28339\n3.0\t3397\t3555\n4.0\t220\t253\n5.0\t800\t1013\n6.0\t1553\t1734\n7.0\t1986\t2095\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://master:4040/jobs/job?id\u003d192",
            "http://master:4040/jobs/job?id\u003d193",
            "http://master:4040/jobs/job?id\u003d194"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1546563386633_-1373705370",
      "id": "20190101-172310_1692614761",
      "dateCreated": "2019-01-04 08:56:26.633",
      "dateStarted": "2019-01-04 10:49:26.264",
      "dateFinished": "2019-01-04 10:49:34.844",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "样本的预测准确率",
      "text": "%sql\nselect\n`Cover_Type`, ROUND(`rat` * 100, 2) as `percent`\nfrom staticPercentTable\nwhere Cover_Type !\u003d \u0027sum_val\u0027\n\n",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 16:57:21.765",
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 4.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "stackedAreaChart",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Cover_Type": "string",
                      "percent": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "pieChart": {},
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "Cover_Type",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "percent",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "enabled": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Cover_Type\tpercent\n1.0\t93.42\n2.0\t97.15\n3.0\t95.56\n4.0\t86.96\n5.0\t78.97\n6.0\t89.56\n7.0\t94.8\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://master:4040/jobs/job?id\u003d195",
            "http://master:4040/jobs/job?id\u003d196",
            "http://master:4040/jobs/job?id\u003d197"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1546563386634_414325950",
      "id": "20190101-170702_497267167",
      "dateCreated": "2019-01-04 08:56:26.634",
      "dateStarted": "2019-01-04 10:49:38.438",
      "dateFinished": "2019-01-04 10:49:46.998",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "测试样本的预测准确数(cross_val)VS样本总量(sum)",
      "text": "%sql\nselect\n`Cover_Type`, `cross_val`, `sum_val`\nfrom staticPercentTable\nwhere Cover_Type \u003d \u0027sum_val\u0027\n",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 10:50:27.630",
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 4.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "pieChart",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Cover_Type": "string",
                      "cross_val": "string",
                      "sum_val": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "pieChart": {},
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [],
              "groups": [],
              "values": [
                {
                  "name": "cross_val",
                  "index": 1.0,
                  "aggr": "sum"
                },
                {
                  "name": "sum_val",
                  "index": 2.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "enabled": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Cover_Type\tcross_val\tsum_val\nsum_val\t55316\t58214\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://master:4040/jobs/job?id\u003d198",
            "http://master:4040/jobs/job?id\u003d199",
            "http://master:4040/jobs/job?id\u003d200"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1546563386634_1004633985",
      "id": "20190101-171432_827064185",
      "dateCreated": "2019-01-04 08:56:26.634",
      "dateStarted": "2019-01-04 10:49:48.475",
      "dateFinished": "2019-01-04 10:49:58.183",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\n",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 09:44:25.629",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1546566265628_1220099381",
      "id": "20190104-094425_947776596",
      "dateCreated": "2019-01-04 09:44:25.628",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "staticPercentData.show",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 15:47:04.122",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true,
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----------+-----+-----+----+---+---+----+----+---------+-------+------------------+\n|Cover_Type|    1|    2|   3|  4|  5|   6|   7|cross_val|sum_val|               rat|\n+----------+-----+-----+----+---+---+----+----+---------+-------+------------------+\n|       1.0|19829| 1348|   0|  0|  4|   1|  43|    19829|  21225| 0.934228504122497|\n|       2.0|  679|27531|  51|  0| 42|  30|   6|    27531|  28339|0.9714880553301104|\n|       3.0|    0|   62|3397| 13|  7|  76|   0|     3397|   3555|0.9555555555555556|\n|       4.0|    0|    0|  26|220|  0|   7|   0|      220|    253|0.8695652173913043|\n|       5.0|   17|  184|  11|  0|800|   1|   0|      800|   1013|0.7897334649555775|\n|       6.0|    5|   58|  99| 16|  3|1553|   0|     1553|   1734|0.8956170703575548|\n|       7.0|   96|   13|   0|  0|  0|   0|1986|     1986|   2095|0.9479713603818616|\n|   sum_val|20626|29196|3584|249|856|1668|2035|    55316|  58214|0.9502181605799292|\n+----------+-----+-----+----+---+---+----+----+---------+-------+------------------+\n\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://master:4040/jobs/job?id\u003d201",
            "http://master:4040/jobs/job?id\u003d202",
            "http://master:4040/jobs/job?id\u003d203"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1546563386635_262354832",
      "id": "20190101-171400_1073931274",
      "dateCreated": "2019-01-04 08:56:26.635",
      "dateStarted": "2019-01-04 15:47:04.151",
      "dateFinished": "2019-01-04 15:47:17.630",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "staticPercentData.cube()",
      "user": "hadoop",
      "dateUpdated": "2019-01-04 15:48:55.903",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1546588024123_457340036",
      "id": "20190104-154704_1664623246",
      "dateCreated": "2019-01-04 15:47:04.123",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "spark/ml_tree",
  "id": "2DYGHUXQX",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}