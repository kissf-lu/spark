{
  "paragraphs": [
    {
      "text": "%md\n\n## Scala trait属性的内容解析\n\n\n---\n\n### 特质属性说明：\n\n\n   ",
      "user": "hadoop",
      "dateUpdated": "2018-12-28 17:40:48.213",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eScala trait属性的内容解析\u003c/h2\u003e\n\u003chr/\u003e\n\u003ch3\u003e特质属性说明：\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1545982145486_-1606809119",
      "id": "20181228-152905_1851469699",
      "dateCreated": "2018-12-28 15:29:05.486",
      "dateStarted": "2018-12-28 17:40:48.218",
      "dateFinished": "2018-12-28 17:40:48.221",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "trait 的定义",
      "text": "%md\n\n   - 特质是Scala 代码复用的基础单元， 可以将方法和字段定义封装;\n   - 以混入的方式实现复用；\n   - 特质不能有任何类参数；\n   ",
      "user": "hadoop",
      "dateUpdated": "2018-12-28 16:55:55.119",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "title": true,
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cul\u003e\n  \u003cli\u003e特质是Scala 代码复用的基础单元， 可以将方法和字段定义封装;\u003c/li\u003e\n  \u003cli\u003e以混入的方式实现复用；\u003c/li\u003e\n  \u003cli\u003e特质不能有任何类参数；\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1545987176535_1951223942",
      "id": "20181228-165256_1955406293",
      "dateCreated": "2018-12-28 16:52:56.536",
      "dateStarted": "2018-12-28 16:55:55.119",
      "dateFinished": "2018-12-28 16:55:55.131",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "\nabstract class Person {\n  def sex: String\n}\n\ntrait BlackPeople extends Person {\n  override def toString \u003d \"Black People\"\n}\n\nclass BlackMan extends Person with BlackPeople{\n  override def sex: String \u003d \"man\"\n}\n\n",
      "user": "hadoop",
      "dateUpdated": "2018-12-28 18:29:45.269",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "java.lang.NullPointerException\n\tat org.apache.thrift.transport.TSocket.open(TSocket.java:170)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:51)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:37)\n\tat org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:60)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:861)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getClient(RemoteInterpreterProcess.java:62)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:133)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.internal_create(RemoteInterpreter.java:165)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open(RemoteInterpreter.java:132)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getFormType(RemoteInterpreter.java:299)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:407)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1545987330083_2024351078",
      "id": "20181228-165530_16872359",
      "dateCreated": "2018-12-28 16:55:30.083",
      "dateStarted": "2018-12-28 18:29:45.277",
      "dateFinished": "2018-12-28 18:29:45.278",
      "status": "ERROR",
      "errorMessage": "java.lang.NullPointerException\n\tat org.apache.thrift.transport.TSocket.open(TSocket.java:170)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:51)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:37)\n\tat org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:60)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:861)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getClient(RemoteInterpreterProcess.java:62)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:133)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.internal_create(RemoteInterpreter.java:165)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open(RemoteInterpreter.java:132)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getFormType(RemoteInterpreter.java:299)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:407)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "",
      "text": "\nabstract class IntQueue {\n  def get: Option[Int]\n  def put(x: Int)\n}\n\nclass BasicIntQueue extends IntQueue {\n  \n  private val buf \u003d new scala.collection.mutable.ArrayBuffer[Int]\n  \n  def empty:Boolean \u003d buf.isEmpty\n  \n  override def get \u003d {\n      if (empty) None\n      else Some(buf.remove(0))\n  }\n\n  override def put(x: Int): Unit \u003d {\n    buf +\u003d x\n  }\n}\n\ntrait Incrementing extends IntQueue {\n//   super 动态加载\n  abstract override def put(x: Int):Unit \u003d { super.put(x + 1) }\n}\n\ntrait Filtering extends IntQueue {\n  abstract override def put(x: Int):Unit \u003d { if (x \u003e 0) super.put(x) }\n}\n",
      "user": "hadoop",
      "dateUpdated": "2018-12-28 16:53:12.900",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "tableHide": false,
        "title": true,
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "defined class IntQueue\ndefined class BasicIntQueue\ndefined trait Incrementing\ndefined trait Filtering\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1545982212330_-1931929778",
      "id": "20181228-153012_1345015745",
      "dateCreated": "2018-12-28 15:30:12.330",
      "dateStarted": "2018-12-28 16:18:26.675",
      "dateFinished": "2018-12-28 16:18:27.244",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Trait 的混入",
      "text": "object TraitFunctions {\n  // \n  object QueueIF extends BasicIntQueue with Incrementing with Filtering\n  \n\n}\n\n\nval queueIF \u003d TraitFunctions.QueueIF\n\n(-1 to 4).map(queueIF.put(_))\n\nqueueIF.get\n",
      "user": "hadoop",
      "dateUpdated": "2018-12-28 16:51:36.967",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false,
        "tableHide": false,
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "defined object TraitFunctions\nqueueIF: TraitFunctions.QueueIF.type \u003d TraitFunctions$QueueIF$@6f759e3a\nres229: scala.collection.immutable.IndexedSeq[Unit] \u003d Vector((), (), (), (), (), ())\nres230: Option[Int] \u003d Some(2)\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1545982243695_-1959469573",
      "id": "20181228-153043_752505141",
      "dateCreated": "2018-12-28 15:30:43.695",
      "dateStarted": "2018-12-28 16:51:36.977",
      "dateFinished": "2018-12-28 16:51:37.817",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "hadoop",
      "dateUpdated": "2018-12-28 16:52:49.418",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1545984690441_1662325475",
      "id": "20181228-161130_355501052",
      "dateCreated": "2018-12-28 16:11:30.441",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "scala/trait_lab",
  "id": "2DZRCKW4C",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}